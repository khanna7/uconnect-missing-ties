
R version 3.2.1 Patched (2015-07-12 r68650) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## create network with unobserved edges from wave 1
>    rm(list=ls())
> 
> ################################
> ## parallelization frontmatter
> ## From: https://statnet.csde.washington.edu/trac/wiki/ergmParallel
> 
>    library(parallel)
> 
>    # create a cluster with 2 processes per node
>    np <- detectCores()
>    np
[1] 32
> #################################
> 
> ## Fitting procedure
> 
>    ## libraries
>    library(network)
network: Classes for Relational Data
Version 1.13.0 created on 2015-08-31.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Martina Morris, University of Washington
                    Skye Bender-deMoll, University of Washington
 For citation information, type citation("network").
 Type help("network-package") to get started.

>    library(ergm)
Loading required package: statnet.common

ergm: version 3.5.1, created on 2015-10-18
Copyright (c) 2015, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Martina Morris, University of Washington
                    with contributions from
                    Li Wang
                    Kirk Li, University of Washington
                    Skye Bender-deMoll, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm").

NOTE: If you use custom ERGM terms based on ‘ergm.userterms’ version
prior to 3.1, you will need to perform a one-time update of the package
boilerplate files (the files that you did not write or modify) from
‘ergm.userterms’ 3.1 or later. See help('eut-upgrade') for
instructions.

>    library(sna)
sna: Tools for Social Network Analysis
Version 2.3-2 created on 2014-01-13.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
 For citation information, type citation("sna").
 Type help(package="sna") to get started.


Attaching package: ‘sna’

The following object is masked from ‘package:network’:

    %c%

> 
>    ## data
>    load(file="gwesp-setup.RData")
> 
>    ## Fit ergm with edges + nodecov('respdeg')
>    ergm.imputed_network <- ergm(imputed_network ~
+                                 edges+
+                                     gwesp(2, fixed=TRUE)+
+                                         gwdsp(2, fixed=TRUE)+
+                                         nodecov("respdeg"),
+                                 verbose=TRUE,
+                                 eval.loglik=FALSE,
+                                 control=control.ergm(MCMLE.maxit=15,
+                                                      parallel=np
+                                                      )
+                                 )
Evaluating network in model
Initializing Metropolis-Hastings proposal(s): ergm:MH_TNT ergm:MH_listTNT
Initializing model.
Using initial method 'MPLE'.
Fitting initial model.
MPLE covariate matrix has 209441 rows.
Using PSOCK.
Fitting ERGM.
Starting maximum likelihood estimation via MCMLE:
Density guard set to 1064654 from an initial count of 53006  edges.
Iteration 1 of at most 15 with parameter: 
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
    -4.70700485      0.10042339     -0.01245535      0.03697665 
Cluster passed by user.
Sample size = 1024 by 32 
Back from unconstrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       27566.97       225728.40       462730.33      2496354.39 
Cluster passed by user.
Sample size = 1024 by 32 
Back from constrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       30861.23       253776.11       450983.24      2831351.24 
Average estimating equation values:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       3294.267       28047.702      -11747.097      334996.852 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.112279571592808  ...
Using lognormal metric (see control.ergm function).
Using log-normal approx with missing (no optim)
The log-likelihood improved by 1.781 
Iteration 2 of at most 15 with parameter: 
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
    -4.83440906      0.12258327     -0.01244249      0.03646933 
Cluster passed by user.
Sample size = 1024 by 32 
Back from unconstrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       33291.04       271025.24       548367.84      3026992.52 
Cluster passed by user.
Sample size = 1024 by 32 
Back from constrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       39275.03       319581.45       496903.70      3659245.83 
Average estimating equation values:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       5983.985       48556.214      -51464.143      632253.314 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0751162916421891  ...
Using lognormal metric (see control.ergm function).
Using log-normal approx with missing (no optim)
The log-likelihood improved by 0.6842 
Iteration 3 of at most 15 with parameter: 
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
    -4.87063226      0.12744704     -0.01254238      0.03645931 
Cluster passed by user.
Sample size = 1024 by 32 
Back from unconstrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       38200.21       309777.60       608114.98      3484345.93 
Cluster passed by user.
Sample size = 1024 by 32 
Back from constrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       45048.63       363608.16       518817.83      4240958.61 
Average estimating equation values:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       6848.417       53830.561      -89297.149      756612.682 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0936759486794472  ...
Using lognormal metric (see control.ergm function).
Using log-normal approx with missing (no optim)
The log-likelihood improved by 0.7334 
Iteration 4 of at most 15 with parameter: 
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
    -4.90329346      0.13245458     -0.01268883      0.03640209 
Cluster passed by user.
Sample size = 1024 by 32 
Back from unconstrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       42371.62       342441.22       649827.04      3875939.78 
Cluster passed by user.
Sample size = 1024 by 32 
Back from constrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       49037.27       393716.77       531310.37      4652477.42 
Average estimating equation values:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       6665.643       51275.556     -118516.675      776537.645 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0839571729302407  ...
Using lognormal metric (see control.ergm function).
Using log-normal approx with missing (no optim)
The log-likelihood improved by < 0.0001 
Iteration 5 of at most 15 with parameter: 
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
    -4.91439906      0.13582740     -0.01285736      0.03624583 
Cluster passed by user.
Sample size = 1024 by 32 
Back from unconstrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       45903.64       369879.85       678094.02      4211342.33 
Cluster passed by user.
Sample size = 1024 by 32 
Back from constrained MCMC. Average statistics:
          edges   gwesp.fixed.2   gwdsp.fixed.2 nodecov.respdeg 
       51871.24       415015.41       539225.99      4951099.21 
